package Vistas.Usuario;

import java.awt.event.ActionListener;
import java.util.EventListener;
import java.util.List;

import AppDataProgramFilms.Utilidades;
import AppService.AppServiceInterfaz;
import AppService.AppServiceSocio;
import Transfer.ReservaTransfer;
import Vistas.PanelGenerico;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SkyLanes
 */
@SuppressWarnings("serial")
public class PanelReservasActuales extends PanelGenerico {
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelListaReservas;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPaneReservas;
    // End of variables declaration//GEN-END:variables

    /**
     * Creates new form PanelReservasActuales
     */
    public PanelReservasActuales(EventListener controlador) {
        initComponents();
        fijarControlador(controlador);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	this.setName("PanelReservasActuales");

        jLabelTitulo = new javax.swing.JLabel();
        jButtonVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneReservas = new javax.swing.JTextPane();
        jLabelListaReservas = new javax.swing.JLabel();

        jTextPaneReservas.setEditable(false);

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelTitulo.setText("Reservas actuales");

        jButtonVolver.setText("Volver");
        jButtonVolver.setName("jButtonVolver");

        jScrollPane1.setViewportView(jTextPaneReservas);

        jLabelListaReservas.setText("Listado de reservas actuales:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButtonVolver)
                .addGap(117, 117, 117)
                .addComponent(jLabelTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelListaReservas)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonVolver))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabelTitulo)))
                .addGap(43, 43, 43)
                .addComponent(jLabelListaReservas)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
	 /**
     * Metodo que se encarga de fijar el controlador en los elementos del panel de forma adecuada
     * @param controlador contiene el controlador encargado del panel. Tiene que escuchar ActionListener e ItemListener.
     */
	public void fijarControlador(EventListener controlador) {
		this.jButtonVolver.addActionListener((ActionListener) controlador);
	}

	@Override
	public Object[] obtenerDatos() {
		return null;
	}

	@Override
	public void limpiarPanel() {
		this.jTextPaneReservas.setText("");
	}

	@Override
	public void update(AppServiceInterfaz modelo, Object arg1) {
		//Buscar en la tabla de reservas el nif del socio.
		
		List<ReservaTransfer> listR = ((AppServiceSocio)modelo).listarReservas(AppServiceSocio.getSocio().getNIF());
		
		if(listR != null && listR.size() >0){
		/*Buscar en la tabla de butacas el nif del socio.
		Con este resultado hacer dos cosas:
		1-Obtener todas las peliculas
		2-Obtener el numero de asientos y la hora y sala de cada reserva*/
			for(int i = 0; i < listR.size() ; ++i){
				String reserva = "Butacas reservadas: " + Utilidades.LINE_SEPARATOR + listR.get(i).getListaButacas().toString()  + Utilidades.LINE_SEPARATOR 
						+ "ID de la reserva: " + listR.get(i).getId();
				
				this.jTextPaneReservas.setText(this.jTextPaneReservas.getText() + Utilidades.LINE_SEPARATOR + reserva);
			
			}
		}
		else{
			this.jTextPaneReservas.setText("Usted no ha realizado ninguna reserva");
		}
		
	}
}
